---
#apiVersion: mongodb.com/v1
#kind: MongoDBOpsManager
#metadata:
#  name: mongodb-opsmanager
#  namespace: {{ .Values.namespace }}
#spec:
#  replicas: {{ .Values.opsmanagercr.replicas }}
#  version: {{ .Values.opsmanagercr.version }}
#  adminCredentials: opsmanageradmin
#  applicationDatabase:
#    members: {{ .Values.opsmanagercr.appdb.members }}
#    persistent: {{ .Values.opsmanagercr.appdb.persistent }}
#  configuration:
#    mms.ignoreInitialUiSetup: "{{ .Values.opsmanagercr.mms.ignoreInitialUiSetup }}"
#    mms.fromEmailAddr: "{{ .Values.opsmanagercr.mms.fromEmailAddr }}"
#    mms.replyToEmailAddr: "{{ .Values.opsmanagercr.mms.replyToEmailAddr }}"
#    mms.adminEmailAddr: "{{ .Values.opsmanagercr.mms.adminEmailAddr }}"
#    mms.mail.transport: "{{ .Values.opsmanagercr.mms.mail.transport }}"
#    mms.mail.hostname: "{{ .Values.opsmanagercr.mms.mail.hostname }}"
#    mms.mail.port: "{{ .Values.opsmanagercr.mms.mail.port }}"

apiVersion: mongodb.com/v1
kind: MongoDBOpsManager
metadata:
  name: mongodb-opsmanager
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.opsmanagercr.replicas }}
  version: {{ .Values.opsmanagercr.version }}
  adminCredentials: opsmanageradmin
  applicationDatabase:
    members: {{ .Values.opsmanagercr.appdb.members }}
    persistent: {{ .Values.opsmanagercr.appdb.persistent }}
    podSpec:
      persistence:
        multiple:
          data:
            labelSelector: {{ .Values.opsmanagercr.appdb.podSpec.persistence.multiple.data.labelSelector }}
            storage: {{ .Values.opsmanagercr.appdb.podSpec.persistence.multiple.data.storage }}
            storageClass: {{ .Values.opsmanagercr.appdb.podSpec.persistence.multiple.data.storageClass }}
          journal:
            labelSelector: {{ .Values.opsmanagercr.appdb.podSpec.persistence.multiple.journal.labelSelector }}
            storage: {{ .Values.opsmanagercr.appdb.podSpec.persistence.multiple.journal.storage }}
            storageClass: {{ .Values.opsmanagercr.appdb.podSpec.persistence.multiple.journal.storageClass }}
          logs:
            labelSelector: {{ .Values.opsmanagercr.appdb.podSpec.persistence.multiple.logs.labelSelector }}
            storage: {{ .Values.opsmanagercr.appdb.podSpec.persistence.multiple.logs.storage }}
            storageClass: {{ .Values.opsmanagercr.appdb.podSpec.persistence.multiple.logs.storageClass }}
  configuration:
    automation.versions.source: local
    mms.ignoreInitialUiSetup: "{{ .Values.opsmanagercr.mms.ignoreInitialUiSetup }}"
    mms.fromEmailAddr: "{{ .Values.opsmanagercr.mms.fromEmailAddr }}"
    mms.replyToEmailAddr: "{{ .Values.opsmanagercr.mms.replyToEmailAddr }}"
    mms.adminEmailAddr: "{{ .Values.opsmanagercr.mms.adminEmailAddr }}"
    mms.mail.transport: "{{ .Values.opsmanagercr.mms.mail.transport }}"
    mms.mail.hostname: "{{ .Values.opsmanagercr.mms.mail.hostname }}"
    mms.mail.port: "{{ .Values.opsmanagercr.mms.mail.port }}"
    
  statefulSet:
    spec:
      # the Persistent Volume Claim will be created for each Ops Manager Pod
      volumeClaimTemplates:
        - metadata:
            name: mongodb-versions
          spec:
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: 20G
      template:
        spec:
          containers:
            - name: mongodb-ops-manager
              volumeMounts:
                - name: mongodb-versions
                  # this is the directory in each Pod where all MongoDB
                  # archives must be put
                  mountPath: /mongodb-ops-manager/mongodb-releases
