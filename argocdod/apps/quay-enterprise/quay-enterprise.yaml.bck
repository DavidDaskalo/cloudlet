---
# Source: quay-enterprise/templates/01_quay_project.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: quay-enterprise

---
# Source: quay-enterprise/templates/02_redhat-pull-secret.yaml
apiVersion: v1
data:
  .dockerconfigjson: ewogICJhdXRocyI6IHsKICAgICJxdWF5LmlvIjogewogICAgICAiYXV0aCI6ICJjbVZrYUdGMEszRjFZWGs2VHpneFYxTklVbE5LVWpFMFZVRmFRa3MxTkVkUlNFcFRNRkF4VmpSRFRGZEJTbFl4V0RKRE5GTkVOMHRQTlRsRFVUbE9NMUpGTVRJMk1USllWVEZJVWc9PSIsCiAgICAgICJlbWFpbCI6ICIiCiAgICB9CiAgfQp9
kind: Secret
metadata:
  annotations:
  name: redhat-pull-secret
  namespace: quay-enterprise
type: kubernetes.io/dockerconfigjson

---
# Source: quay-enterprise/templates/03_operator_group.yaml
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: operator-group
  namespace: quay-enterprise
spec:
  targetNamespaces:
  - quay-enterprise

---
# Source: quay-enterprise/templates/04_operator_sub.yaml
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: quay
  namespace: quay-enterprise
spec:
  channel: "{{ .Values.installation.channel }}"
  name: quay
  source: community-operators
  sourceNamespace: openshift-marketplace
  installPlanApproval: "{{ .Values.installation.installPlan }}"

---
# Source: quay-enterprise/templates/06_db-creds.yaml
apiVersion: v1
stringData:
  database-username: "{{ .Values.CR.secrets.db.user }}"
  database-password: "{{ .Values.CR.secrets.db.pass }}"
  database-root-password: "{{ .Values.CR.secrets.db.rootpass }}"
  database-name:  "{{ .Values.CR.secrets.db.name }}"
kind: Secret
metadata:
  annotations:
  name: db-creds
  namespace: quay-enterprise
type: Opaque

---
# Source: quay-enterprise/templates/07_quay-config-creds.yaml
apiVersion: v1
stringData:
  config-app-password: "{{ .Values.CR.secrets.quay.config.pass  }}"
kind: Secret
metadata:
  annotations:
  name: quay-config-creds
  namespace: quay-enterprise
type: Opaque

---
# Source: quay-enterprise/templates/08_quayconfigfile.yaml
apiVersion: v1
data:
  configmore.yaml: >-
    QVBQX1NQRUNJRklDX1RPS0VOX0VYUElSQVRJT046IDNtCkZFQVRVUkVfQU5PTllNT1VTX0FDQ0VTUzogZmFsc2UKRkVBVFVSRV9JTlZJVEVfT05MWV9VU0VSX0NSRUFUSU9OOiBmYWxzZQpGRUFUVVJFX1BBUlRJQUxfVVNFUl9BVVRPQ09NUExFVEU6IGZhbHNlCkZFQVRVUkVfUkVRVUlSRV9FTkNSWVBURURfQkFTSUNfQVVUSDogdHJ1ZQo=
kind: Secret
metadata:
  annotations:
  name: quayconfigfile
  namespace: quay-enterprise
type: Opaque

---
# Source: quay-enterprise/templates/09_redis-creds.yaml
apiVersion: v1
stringData:
  password: "{{ .Values.CR.secrets.redis.pass  }}"
kind: Secret
metadata:
  annotations:
  name: redis-creds
  namespace: quay-enterprise
type: Opaque

---
# Source: quay-enterprise/templates/10_super-user-quay.yaml
apiVersion: v1
stringData:
  superuser-username: "{{ .Values.CR.secrets.quay.super.user }}"
  superuser-password: "{{ .Values.CR.secrets.quay.super.pass }}"
  superuser-email: "{{ .Values.CR.secrets.quay.super.mail }}"
kind: Secret
metadata:
  annotations:
  name: super-user-quay
  namespace: quay-enterprise
type: Opaque

---
# Source: quay-enterprise/templates/11_custom-quay-tls.yaml
kind: Secret
apiVersion: v1
metadata:
  name: custom-quay-tls
  namespace: quay-enterprise
data:
  tls.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROakNDQWg0Q0NRRFJUOWdzeFdUQnB6QU5CZ2txaGtpRzl3MEJBUXNGQURCVE1Rc3dDUVlEVlFRR0V3SlkKV0RFVk1CTUdBMVVFQnd3TVJHVm1ZWFZzZENCRGFYUjVNUXd3Q2dZRFZRUUtEQU5OVDBReEVUQVBCZ05WQkFzTQpDRU5zYjNWa2JHVjBNUXd3Q2dZRFZRUUREQU5TYmtRd0hoY05NakF3TlRFeE1USXhNVE14V2hjTk16QXdOVEE1Ck1USXhNVE14V2pCbk1Rc3dDUVlEVlFRR0V3SllXREVWTUJNR0ExVUVCd3dNUkdWbVlYVnNkQ0JEYVhSNU1Sd3cKR2dZRFZRUUtEQk5FWldaaGRXeDBJRU52YlhCaGJua2dUSFJrTVNNd0lRWURWUVFEREJvcUxuTmhiR1Z6TG14aApZaTUwYkhZdWNtVmthR0YwTG1OdmJUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCCkFMMlhBMUIvYzRrdEVUSDZ5NDdkeDE1NCtGT1d2a2lpU2F4bTFwWWdLcGJaWGJ4N2ZlNlFJWXc3czNIQngwbGYKS2tqNHE3cFRYL3NscGdJaHc0RThQdVBhZktsUGw3U3lMT0xtdSs5MTRaemlrUlY4Um51Wit0alA5UTBVOXFydAorQWhlTnl6NzdqSjBLT3VsM3hVbERyaGd1aGVtSDBxWDlHd0I1QlhQQ1VYeFVNRVdIWDJOQmhCbnFRL0VqZGtDCm9iMEdsRFlBeHBmeUVXV0NPQkQ3RUNMalF3K1laMk9KOXlaQXN1dGczeGJjNkNzM3RiNmpWZHllTWhhTkE5Zm4KTU9jYzJsY3BkZ0d6VnlNbzE2d0ZjaDRzS2N3cVpLUnEreHhnZFdaTUxKdGlJV1FDaWZtcUd6d2FFUDVwakh2Tgo3ZFFEMmxEcTVXUFlOaWxkd1VnMDNtVUNBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUFObzZVcW1aCnJBMUovbFZKd2pKSmJWWm9NMmNoUkdDYjJPU1BYUVU5ZnRFTk5xcTlIVG5LNEE4c2FScnNCbUxhd29wcFE0ZzEKbkJVRndmZU5ZbXZkbWJkZEhuMHBzc3h5cU11ODlPRGRRd3lYc2dsTlFLdGtHU24xNUtpSGpRNGZ4MWZxdU5KUwpPZ2p4MkFVWlhRM3dsdTJoclk2bjB5WHd4aDB3ckdmQU5vTm9hTUhXYTZqOFd0azJwRXk4bjdrNTYrUnpJOE9LCjBsMlNrN2FyRUd1OXcwZzI2eElMbHZyR1FLTDU5RzNOWUdQSTFJcXJwTEZsQ2NoQUpHQWdJeWVrK1pTVXA2dXAKbHY2d1JqSitPY2wvTmJHQ0R3ZnpvZFpoUnkvNnFLL0l2L0hNby9OK29ncFR6c29zcnI2My9oSnVjOGNDcWJqTgo1Z2lkL05ER0RRVHdYZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURlVENDQW1HZ0F3SUJBZ0lKQU5JNjVvWHpYRk5mTUEwR0NTcUdTSWIzRFFFQkN3VUFNRk14Q3pBSkJnTlYKQkFZVEFsaFlNUlV3RXdZRFZRUUhEQXhFWldaaGRXeDBJRU5wZEhreEREQUtCZ05WQkFvTUEwMVBSREVSTUE4RwpBMVVFQ3d3SVEyeHZkV1JzWlhReEREQUtCZ05WQkFNTUExSnVSREFlRncweU1EQTFNVEV4TVRReU1UbGFGdzB6Ck1EQTFNRGt4TVRReU1UbGFNRk14Q3pBSkJnTlZCQVlUQWxoWU1SVXdFd1lEVlFRSERBeEVaV1poZFd4MElFTnAKZEhreEREQUtCZ05WQkFvTUEwMVBSREVSTUE4R0ExVUVDd3dJUTJ4dmRXUnNaWFF4RERBS0JnTlZCQU1NQTFKdQpSRENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFKbkV5ckZwcVNNcmJRckdmdlp1CkYwM1JSNXVwMVN2QTZOb20ySC9CbFlhK05KTlJuem0zdmZCaVNGb3dmRFRVOEsxcy9mdU03ajkzNCtBUkUvSjAKMDhRWEliS3NjanBjRE14OFBGdkpNSnlCZkRUS0ZuVERxMDdHV01QRWpmWVFDaWdKUkwrZFp2eWpDNHZWTWpzdgpCMDgrRGJobDhNSDNRWUxoeXhHSFBmUllHZ2lDNERzd015ckxtZU4vZUt2a0k3RXVEUC92LzNvSHY3T2FPLzlzCkFHdkNuS1ZEUzh1aE41TGdBeFprT3M5MDdsYXMyUWtHS202VDB1UTBoUU9jMWF2ZXZOTXh5YmswVGRBM0NEbHcKNzZjZ2lHTW1acmVNbHBHMy9JbTQ4MDBSK1Y5RGpHbDBHdElaeVpZL1g3N0VkOWpHdjZZZThjcC84b2dXNlhEQwowYk1DQXdFQUFhTlFNRTR3SFFZRFZSME9CQllFRklFWVprYy9ZYlNaQVNudUc4MUZIaTVDT3pzcE1COEdBMVVkCkl3UVlNQmFBRklFWVprYy9ZYlNaQVNudUc4MUZIaTVDT3pzcE1Bd0dBMVVkRXdRRk1BTUJBZjh3RFFZSktvWkkKaHZjTkFRRUxCUUFEZ2dFQkFDYWNzZ2FNSlAvcDl5OVgzeC9EY01jOWVjdEpqQTN1RHcxME4xV2VGTmVqK1RDawp3bExYc05nRHVXdEF1dWI1ZXRGckNKOXJZUTRMaWtBU0RLVElnMThuWEdLVlNWcVk0TFNieU9WWGxOcDliVng0Cm1xK2tQRGhGMTFNdCtZNndacEZOUldlRFVBQkxiOTZKMDJRSlBPQjU3a0RrOTNXNDlmMWpuUzFzd2MrZFBOUlMKTUhMWWlNcWtCUEd6Zk51Y2VYOTFXSnl6dUo4cmFmclpDaWxKaXpzVGQ0VUlaVHBNbndmWnRKMTZYNTFHZG9QUApvLzM4dVZjeGZxL2xvL2pWZjNWbmpoOWpnemU5VFZtRHdJYzlZbnN0Mnp3YWM3eC95cUdJaU1KWTcvOVN0djdpCjJteVpyaUR3Y1JaRWF2MXpyY0MwSXQ5cHVtN2FnMCtpM1UzRFZYVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdlpjRFVIOXppUzBSTWZyTGp0M0hYbmo0VTVhK1NLSkpyR2JXbGlBcWx0bGR2SHQ5CjdwQWhqRHV6Y2NISFNWOHFTUGlydWxOZit5V21BaUhEZ1R3KzQ5cDhxVStYdExJczR1YTc3M1hobk9LUkZYeEcKZTVuNjJNLzFEUlQycXUzNENGNDNMUHZ1TW5RbzY2WGZGU1VPdUdDNkY2WWZTcGYwYkFIa0ZjOEpSZkZRd1JZZApmWTBHRUdlcEQ4U04yUUtodlFhVU5nREdsL0lSWllJNEVQc1FJdU5ERDVoblk0bjNKa0N5NjJEZkZ0em9LemUxCnZxTlYzSjR5Rm8wRDErY3c1eHphVnlsMkFiTlhJeWpYckFWeUhpd3B6Q3BrcEdyN0hHQjFaa3dzbTJJaFpBS0oKK2FvYlBCb1EvbW1NZTgzdDFBUGFVT3JsWTlnMktWM0JTRFRlWlFJREFRQUJBb0lCQUU2N2Q5VG1HTVRPd21WUApFVm16SUNoTGRGVENOU05Vd2VPbWtWYW01UWpnRzkwNks0SDJ1UGZUa3lHYXAzZ0EzVDZRaGtCS2Y0RjhrUVF4Cm9VNzZCZVA1eCt0SDhtaEgxZndrZGNkcjNOV2FBVVk2NWNwT2w2MlNMdUhQNHQvNUV4Zm1pR05WL0FWWDErYUUKYTdBTVE2Q3VDcG5ua3ZjWFE1blc3ekZmV1NxQjVVRDNQZHE0TGFCTGVhRnMrNXQrV1pFM3M4Yk9HSjg1UmRXQgpBVTVNV1liS1BlWSt4a0xwTG5UMkNMTUFEcTFRUmJlbTR6cGx2WXhPQ0k1OXFmamtWS2tBeHBsTEhiK1ZwUW0rClVHanlEemxhRGtmcXFlR2prRDdBZ0dqNkZaNVhLaEpUMFYzOWo3NFFid2JGc1haOUp2WHBPaUhENk9MQmZlbG8KUUtyUDZjRUNnWUVBNUFFREVvbmdyb2NuNmFrMGMvczQrVDBNNFpZc0QyNGl2K1VZZisrWjV1UUV2bUx0aWNNQQpuTkF3dTJscTd2THQ5RE02eFhHMDNNZXUzQUNxWTNkSldtWTkvblNtUktrVnZnM3BZcWdwY0p0S2t4Ynp0S1pMClZiTUxxMkZzU0lJWjJOZGJwbnhtR1NxRUFZRWhING5zVi9OVDdwMkNyZUxxMkN5K0t4VTlLV01DZ1lFQTFONkMKSDJhL3JZclJvNVpjRGxsQkczeForSGhoNDd5SGU0Q21UbngwTTNNMUtYZVNoSVB5WTRpOUVFRlFYMkpta2w3UApyN2xiZ3JITUV0aEZ1ZWFUeHdicUpuQWQxeGlmRHpza2JCRTdDM3pHSUQ3OHVtbDBOWkdCOG1vUDZlT1ZqNldCCkZCVnVVZC9yYTlRVHJGZFV2ZUc5S2c0R3ZrbmxyM1NEZjc3dFI1Y0NnWUFTOUNLVlAvRDFrVGE0TGVDMlk0UHcKOUNwRjluM2pLbnlwQnhwcVNEaTdBT21FQ2lWRTluanVrRC84MUY2WFRvcUphbGpRWVF0djd3bVNNRnY1dU1qWQpRdmVVVjQ0YTF4Ti9vUmh0b3gwT3gxb0RzRHpDSDdEVGh2YkpZR2ZuL3lpMjVmQXdmdGJkOExMWWpTdDd1N054Ci9FQlY3YklYVW0zRFdyVFVVQWV0a1FLQmdGQ2hWN2g5T3UySlA0OHZUUDlDWDU4Qm96S3lwcUdVcjl6Z0JoNkUKbFo5SGJFT2d2eWJpczlWdjNlMWlVQWRSUm5qNjRNQTIvYXFybmhrbFFvUUFDc25Bbk1DaWh5c0tjSFZjZVpkVgpqMy95YXptYm9pOFo4cUszMHZqM283OThMUktVSmlodFZiUTlsUGJyQmVpcHk3ZUE0aDRqNGZvQ0U3WTU4L1ZYClpKbFJBb0dBUjVRMXJNaWJ6T3Y0dFkyRklvbVBMWDJZQjdnRmNhNzZDTXJHVVdxNlRPcnBrUjAyUFlrOEE4aUcKcXpSdkdsTWRLOWNqQ09ZSDI4QWVnUXZ2VWo0dGczallWR1o0azN1UFlDQjdJNlN0azdBRlAyU21mM3Q3aFRyeQpZNVUzN2xjU0lBVTBnTjk4VDdBZnNlQjl2dTZwaUZTc3BrbXA1c0xTRHlSQ0MzbVRucGc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
type: kubernetes.io/tls

---
# Source: quay-enterprise/templates/12_redhatcop_v1alpha1_quayecosystem_cr.yaml
apiVersion: redhatcop.redhat.io/v1alpha1
kind: QuayEcosystem
metadata:
  name: quayecosystem
  namespace: quay-enterprise
spec:
  quay:
    superuserCredentialsSecretName: super-user-quay
    configSecretName: quay-config-creds
    imagePullSecretName: redhat-pull-secret
    persistentVolumeSize: "{{ .Values.CR.quay.persistentVolumeSize }}Gi"
    database:
      volumeSize: "{{ .Values.CR.db.volumeSize }}Gi"
      credentialsSecretName: db-creds
    enableRepoMirroring: true
    repoMirrorTLSVerify: false
    configFiles:
      - secretName: quayconfigfile
    livenessProbe:
      initialDelaySeconds: 420
      httpGet:
        path: /health/instance
        port: 8443
        scheme: HTTPS
    readinessProbe:
      initialDelaySeconds: 420
      httpGet:
        path: /health/instance
        port: 8443
        scheme: HTTPS
    tls:
      secretName: custom-quay-tls
  redis:
    credentialsSecretName: redis-creds
    imagePullSecretName: redhat-pull-secret
  clair:
    enabled: false
    imagePullSecretName: redhat-pull-secret
    updateInterval: "{{ .Values.CR.clair.updateInterval }}"
    
---
#Source: quay-enterprise/templates/12_redhatcop.redhat.io_quayecosystems_crd.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: quayecosystems.redhatcop.redhat.io
spec:
  group: redhatcop.redhat.io
  names:
    kind: QuayEcosystem
    listKind: QuayEcosystemList
    plural: quayecosystems
    singular: quayecosystem
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: QuayEcosystem is the Schema for the quayecosystems API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: QuayEcosystemSpec defines the desired state of QuayEcosystem
          properties:
            clair:
              description: Clair defines the properties of a deployment of Clair
              properties:
                database:
                  description: Database defines a database that will be deployed to
                    support a particular component
                  properties:
                    cpu:
                      type: string
                    credentialsSecretName:
                      type: string
                    deploymentStrategy:
                      enum:
                      - Recreate
                      - RollingUpdate
                      type: string
                    envVars:
                      items:
                        description: EnvVar represents an environment variable present
                          in a Container.
                        properties:
                          name:
                            description: Name of the environment variable. Must be
                              a C_IDENTIFIER.
                            type: string
                          value:
                            description: 'Variable references $(VAR_NAME) are expanded
                              using the previous defined environment variables in
                              the container and any service environment variables.
                              If a variable cannot be resolved, the reference in the
                              input string will be unchanged. The $(VAR_NAME) syntax
                              can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                              references will never be expanded, regardless of whether
                              the variable exists or not. Defaults to "".'
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              fieldRef:
                                description: 'Selects a field of the pod: supports
                                  metadata.name, metadata.namespace, metadata.labels,
                                  metadata.annotations, spec.nodeName, spec.serviceAccountName,
                                  status.hostIP, status.podIP.'
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                - fieldPath
                                type: object
                              resourceFieldRef:
                                description: 'Selects a resource of the container:
                                  only resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage, requests.cpu,
                                  requests.memory and requests.ephemeral-storage)
                                  are currently supported.'
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                      optional for env vars'
                                    type: string
                                  divisor:
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    type: string
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                - resource
                                type: object
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's
                                  namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                    image:
                      type: string
                    imagePullSecretName:
                      type: string
                    livenessProbe:
                      description: Probe describes a health check to be performed
                        against a container to determine whether it is alive or ready
                        to receive traffic.
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: 'Number of seconds after the container has
                            started before liveness probes are initiated. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness and startup. Minimum value
                            is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        timeoutSeconds:
                          description: 'Number of seconds after which the probe times
                            out. Defaults to 1 second. Minimum value is 1. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                      type: object
                    memory:
                      type: string
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    readinessProbe:
                      description: Probe describes a health check to be performed
                        against a container to determine whether it is alive or ready
                        to receive traffic.
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: 'Number of seconds after the container has
                            started before liveness probes are initiated. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness and startup. Minimum value
                            is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        timeoutSeconds:
                          description: 'Number of seconds after which the probe times
                            out. Defaults to 1 second. Minimum value is 1. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                      type: object
                    replicas:
                      format: int32
                      type: integer
                    resources:
                      description: ResourceRequirements describes the compute resource
                        requirements.
                      properties:
                        limits:
                          additionalProperties:
                            type: string
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties:
                            type: string
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                    server:
                      type: string
                    volumeSize:
                      type: string
                  type: object
                deploymentStrategy:
                  enum:
                  - Recreate
                  - RollingUpdate
                  type: string
                enabled:
                  type: boolean
                envVars:
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                image:
                  type: string
                imagePullSecretName:
                  type: string
                livenessProbe:
                  description: Probe describes a health check to be performed against
                    a container to determine whether it is alive or ready to receive
                    traffic.
                  properties:
                    exec:
                      description: One and only one of the following should be specified.
                        Exec specifies the action to take.
                      properties:
                        command:
                          description: Command is the command line to execute inside
                            the container, the working directory for the command  is
                            root ('/') in the container's filesystem. The command
                            is simply exec'd, it is not run inside a shell, so traditional
                            shell instructions ('|', etc) won't work. To use a shell,
                            you need to explicitly call out to that shell. Exit status
                            of 0 is treated as live/healthy and non-zero is unhealthy.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      format: int32
                      type: integer
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP. You probably want to set "Host" in httpHeaders instead.
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP
                            allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be
                              used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults
                            to HTTP.
                          type: string
                      required:
                      - port
                      type: object
                    initialDelaySeconds:
                      description: 'Number of seconds after the container has started
                        before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness and startup. Minimum value is 1.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: 'TCPSocket specifies an action involving a TCP
                        port. TCP hooks not yet supported TODO: implement a realistic
                        TCP lifecycle hook'
                      properties:
                        host:
                          description: 'Optional: Host name to connect to, defaults
                            to the pod IP.'
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times
                        out. Defaults to 1 second. Minimum value is 1. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  type: object
                readinessProbe:
                  description: Probe describes a health check to be performed against
                    a container to determine whether it is alive or ready to receive
                    traffic.
                  properties:
                    exec:
                      description: One and only one of the following should be specified.
                        Exec specifies the action to take.
                      properties:
                        command:
                          description: Command is the command line to execute inside
                            the container, the working directory for the command  is
                            root ('/') in the container's filesystem. The command
                            is simply exec'd, it is not run inside a shell, so traditional
                            shell instructions ('|', etc) won't work. To use a shell,
                            you need to explicitly call out to that shell. Exit status
                            of 0 is treated as live/healthy and non-zero is unhealthy.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      format: int32
                      type: integer
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP. You probably want to set "Host" in httpHeaders instead.
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP
                            allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be
                              used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults
                            to HTTP.
                          type: string
                      required:
                      - port
                      type: object
                    initialDelaySeconds:
                      description: 'Number of seconds after the container has started
                        before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness and startup. Minimum value is 1.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: 'TCPSocket specifies an action involving a TCP
                        port. TCP hooks not yet supported TODO: implement a realistic
                        TCP lifecycle hook'
                      properties:
                        host:
                          description: 'Optional: Host name to connect to, defaults
                            to the pod IP.'
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times
                        out. Defaults to 1 second. Minimum value is 1. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                  type: object
                replicas:
                  format: int32
                  type: integer
                resources:
                  description: ResourceRequirements describes the compute resource
                    requirements.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                sslCertificatesSecretName:
                  type: string
                updateInterval:
                  type: string
              type: object
            quay:
              description: Quay defines the properies of a deployment of Quay
              properties:
                configEnvVars:
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                configFiles:
                  items:
                    description: QuayConfigFiles defines configuration files that
                      are injected into the Quay resources
                    properties:
                      files:
                        items:
                          description: QuayConfigFile defines configuration files
                            that are injected into the Quay resources
                          properties:
                            filename:
                              type: string
                            key:
                              type: string
                            type:
                              description: QuayConfigFileType defines the type of
                                configuration file
                              enum:
                              - config
                              - extraCaCert
                              type: string
                          required:
                          - key
                          type: object
                        type: array
                      secretName:
                        type: string
                      type:
                        description: QuayConfigFileType defines the type of configuration
                          file
                        type: string
                    required:
                    - secretName
                    type: object
                  type: array
                configResources:
                  description: ResourceRequirements describes the compute resource
                    requirements.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                configSecretName:
                  type: string
                database:
                  description: Database defines a database that will be deployed to
                    support a particular component
                  properties:
                    cpu:
                      type: string
                    credentialsSecretName:
                      type: string
                    deploymentStrategy:
                      enum:
                      - Recreate
                      - RollingUpdate
                      type: string
                    envVars:
                      items:
                        description: EnvVar represents an environment variable present
                          in a Container.
                        properties:
                          name:
                            description: Name of the environment variable. Must be
                              a C_IDENTIFIER.
                            type: string
                          value:
                            description: 'Variable references $(VAR_NAME) are expanded
                              using the previous defined environment variables in
                              the container and any service environment variables.
                              If a variable cannot be resolved, the reference in the
                              input string will be unchanged. The $(VAR_NAME) syntax
                              can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                              references will never be expanded, regardless of whether
                              the variable exists or not. Defaults to "".'
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              fieldRef:
                                description: 'Selects a field of the pod: supports
                                  metadata.name, metadata.namespace, metadata.labels,
                                  metadata.annotations, spec.nodeName, spec.serviceAccountName,
                                  status.hostIP, status.podIP.'
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                - fieldPath
                                type: object
                              resourceFieldRef:
                                description: 'Selects a resource of the container:
                                  only resources limits and requests (limits.cpu,
                                  limits.memory, limits.ephemeral-storage, requests.cpu,
                                  requests.memory and requests.ephemeral-storage)
                                  are currently supported.'
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                      optional for env vars'
                                    type: string
                                  divisor:
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    type: string
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                - resource
                                type: object
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's
                                  namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                    image:
                      type: string
                    imagePullSecretName:
                      type: string
                    livenessProbe:
                      description: Probe describes a health check to be performed
                        against a container to determine whether it is alive or ready
                        to receive traffic.
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: 'Number of seconds after the container has
                            started before liveness probes are initiated. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness and startup. Minimum value
                            is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        timeoutSeconds:
                          description: 'Number of seconds after which the probe times
                            out. Defaults to 1 second. Minimum value is 1. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                      type: object
                    memory:
                      type: string
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    readinessProbe:
                      description: Probe describes a health check to be performed
                        against a container to determine whether it is alive or ready
                        to receive traffic.
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          format: int32
                          type: integer
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        initialDelaySeconds:
                          description: 'Number of seconds after the container has
                            started before liveness probes are initiated. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          format: int32
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness and startup. Minimum value
                            is 1.
                          format: int32
                          type: integer
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        timeoutSeconds:
                          description: 'Number of seconds after which the probe times
                            out. Defaults to 1 second. Minimum value is 1. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          format: int32
                          type: integer
                      type: object
                    replicas:
                      format: int32
                      type: integer
                    resources:
                      description: ResourceRequirements describes the compute resource
                        requirements.
                      properties:
                        limits:
                          additionalProperties:
                            type: string
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties:
                            type: string
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                    server:
                      type: string
                    volumeSize:
                      type: string
                  type: object
                deploymentStrategy:
                  enum:
                  - Recreate
                  - RollingUpdate
                  type: string
                enableRepoMirroring:
                  type: boolean
                enableStorageReplication:
                  type: boolean
                envVars:
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                externalAccess:
                  description: ExternalAccess defines the properies of a Quay External
                    Access
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      type: object
                    configAnnotations:
                      additionalProperties:
                        type: string
                      type: object
                    configHostname:
                      type: string
                    configNodePort:
                      format: int32
                      type: integer
                    hostname:
                      type: string
                    nodePort:
                      format: int32
                      type: integer
                    tls:
                      description: TLSExternalAccess defines the properies of TLS
                        properties for External Access
                      properties:
                        secretName:
                          type: string
                        termination:
                          description: termination indicates termination type.
                          type: string
                      required:
                      - termination
                      type: object
                    type:
                      description: ExternalAccessType defines the method for accessing
                        Quay from an external source
                      enum:
                      - Route
                      - LoadBalancer
                      - NodePort
                      - Ingress
                      type: string
                  type: object
                image:
                  type: string
                imagePullSecretName:
                  type: string
                keepConfigDeployment:
                  type: boolean
                livenessProbe:
                  description: Probe describes a health check to be performed against
                    a container to determine whether it is alive or ready to receive
                    traffic.
                  properties:
                    exec:
                      description: One and only one of the following should be specified.
                        Exec specifies the action to take.
                      properties:
                        command:
                          description: Command is the command line to execute inside
                            the container, the working directory for the command  is
                            root ('/') in the container's filesystem. The command
                            is simply exec'd, it is not run inside a shell, so traditional
                            shell instructions ('|', etc) won't work. To use a shell,
                            you need to explicitly call out to that shell. Exit status
                            of 0 is treated as live/healthy and non-zero is unhealthy.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      format: int32
                      type: integer
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP. You probably want to set "Host" in httpHeaders instead.
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP
                            allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be
                              used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults
                            to HTTP.
                          type: string
                      required:
                      - port
                      type: object
                    initialDelaySeconds:
                      description: 'Number of seconds after the container has started
                        before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness and startup. Minimum value is 1.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: 'TCPSocket specifies an action involving a TCP
                        port. TCP hooks not yet supported TODO: implement a realistic
                        TCP lifecycle hook'
                      properties:
                        host:
                          description: 'Optional: Host name to connect to, defaults
                            to the pod IP.'
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times
                        out. Defaults to 1 second. Minimum value is 1. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                  type: object
                migrationPhase:
                  enum:
                  - new-installation
                  - add-new-fields
                  - backfill-then-read-only-new
                  - remove-old-field
                  type: string
                nodeSelector:
                  additionalProperties:
                    type: string
                  type: object
                readinessProbe:
                  description: Probe describes a health check to be performed against
                    a container to determine whether it is alive or ready to receive
                    traffic.
                  properties:
                    exec:
                      description: One and only one of the following should be specified.
                        Exec specifies the action to take.
                      properties:
                        command:
                          description: Command is the command line to execute inside
                            the container, the working directory for the command  is
                            root ('/') in the container's filesystem. The command
                            is simply exec'd, it is not run inside a shell, so traditional
                            shell instructions ('|', etc) won't work. To use a shell,
                            you need to explicitly call out to that shell. Exit status
                            of 0 is treated as live/healthy and non-zero is unhealthy.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      format: int32
                      type: integer
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP. You probably want to set "Host" in httpHeaders instead.
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP
                            allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be
                              used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults
                            to HTTP.
                          type: string
                      required:
                      - port
                      type: object
                    initialDelaySeconds:
                      description: 'Number of seconds after the container has started
                        before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness and startup. Minimum value is 1.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: 'TCPSocket specifies an action involving a TCP
                        port. TCP hooks not yet supported TODO: implement a realistic
                        TCP lifecycle hook'
                      properties:
                        host:
                          description: 'Optional: Host name to connect to, defaults
                            to the pod IP.'
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times
                        out. Defaults to 1 second. Minimum value is 1. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                  type: object
                registryBackends:
                  items:
                    description: RegistryBackend defines a particular backend supporting
                      the Quay registry
                    properties:
                      azure:
                        description: AzureRegistryBackendSource defines Azure blob
                          registry storage
                        properties:
                          accountKey:
                            type: string
                          accountName:
                            type: string
                          containerName:
                            type: string
                          sasToken:
                            type: string
                          storagePath:
                            type: string
                        type: object
                      cloudfrontS3:
                        description: CloudfrontS3RegistryBackendSource defines CouldfrontS3
                          registry storage
                        properties:
                          accessKey:
                            type: string
                          bucketName:
                            type: string
                          distributionDomain:
                            type: string
                          host:
                            type: string
                          keyID:
                            type: string
                          port:
                            type: integer
                          privateKeyFilename:
                            type: string
                          secretKey:
                            type: string
                          storagePath:
                            type: string
                        type: object
                      credentialsSecretName:
                        type: string
                      googleCloud:
                        description: GoogleCloudRegistryBackendSource defines Google
                          Cloud registry storage
                        properties:
                          accessKey:
                            type: string
                          bucketName:
                            type: string
                          secretKey:
                            type: string
                          storagePath:
                            type: string
                        type: object
                      local:
                        description: LocalRegistryBackendSource defines local registry
                          storage
                        properties:
                          storagePath:
                            type: string
                        type: object
                      name:
                        type: string
                      rados:
                        description: RADOSRegistryBackendSource defines Ceph RADOS
                          registry storage
                        properties:
                          accessKey:
                            type: string
                          bucketName:
                            type: string
                          hostname:
                            type: string
                          port:
                            type: integer
                          secretKey:
                            type: string
                          secure:
                            type: boolean
                          storagePath:
                            type: string
                        type: object
                      replicateByDefault:
                        type: boolean
                      rhocs:
                        description: RHOCSRegistryBackendSource defines RHOCS registry
                          storage
                        properties:
                          accessKey:
                            type: string
                          bucketName:
                            type: string
                          hostname:
                            type: string
                          port:
                            type: integer
                          secretKey:
                            type: string
                          secure:
                            type: boolean
                          storagePath:
                            type: string
                        type: object
                      s3:
                        description: S3RegistryBackendSource defines S3 registry storage
                        properties:
                          accessKey:
                            type: string
                          bucketName:
                            type: string
                          host:
                            type: string
                          port:
                            type: integer
                          secretKey:
                            type: string
                          storagePath:
                            type: string
                        type: object
                      swift:
                        description: SwiftRegistryBackendSource defines Swift registry
                          storage
                        properties:
                          authURL:
                            type: string
                          authVersion:
                            type: string
                          caCertPath:
                            type: string
                          container:
                            type: string
                          osOptions:
                            additionalProperties:
                              type: string
                            type: object
                          password:
                            type: string
                          storagePath:
                            type: string
                          tempURLKey:
                            type: string
                          user:
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                registryStorage:
                  description: RegistryStorage defines the configurations to support
                    persistent storage
                  properties:
                    persistentVolumeAccessModes:
                      items:
                        type: string
                      type: array
                    persistentVolumeSize:
                      type: string
                    persistentVolumeStorageClassName:
                      type: string
                  type: object
                replicas:
                  format: int32
                  type: integer
                repoMirrorEnvVars:
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                repoMirrorResources:
                  description: ResourceRequirements describes the compute resource
                    requirements.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                repoMirrorServerHostname:
                  type: string
                repoMirrorTLSVerify:
                  type: boolean
                resources:
                  description: ResourceRequirements describes the compute resource
                    requirements.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                skipSetup:
                  type: boolean
                superuserCredentialsSecretName:
                  type: string
              type: object
            redis:
              description: Redis defines the properies of a deployment of Redis
              properties:
                credentialsSecretName:
                  type: string
                deploymentStrategy:
                  enum:
                  - Recreate
                  - RollingUpdate
                  type: string
                envVars:
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                hostname:
                  type: string
                image:
                  type: string
                imagePullSecretName:
                  type: string
                livenessProbe:
                  description: Probe describes a health check to be performed against
                    a container to determine whether it is alive or ready to receive
                    traffic.
                  properties:
                    exec:
                      description: One and only one of the following should be specified.
                        Exec specifies the action to take.
                      properties:
                        command:
                          description: Command is the command line to execute inside
                            the container, the working directory for the command  is
                            root ('/') in the container's filesystem. The command
                            is simply exec'd, it is not run inside a shell, so traditional
                            shell instructions ('|', etc) won't work. To use a shell,
                            you need to explicitly call out to that shell. Exit status
                            of 0 is treated as live/healthy and non-zero is unhealthy.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      format: int32
                      type: integer
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP. You probably want to set "Host" in httpHeaders instead.
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP
                            allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be
                              used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults
                            to HTTP.
                          type: string
                      required:
                      - port
                      type: object
                    initialDelaySeconds:
                      description: 'Number of seconds after the container has started
                        before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness and startup. Minimum value is 1.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: 'TCPSocket specifies an action involving a TCP
                        port. TCP hooks not yet supported TODO: implement a realistic
                        TCP lifecycle hook'
                      properties:
                        host:
                          description: 'Optional: Host name to connect to, defaults
                            to the pod IP.'
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times
                        out. Defaults to 1 second. Minimum value is 1. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  type: object
                port:
                  format: int32
                  type: integer
                readinessProbe:
                  description: Probe describes a health check to be performed against
                    a container to determine whether it is alive or ready to receive
                    traffic.
                  properties:
                    exec:
                      description: One and only one of the following should be specified.
                        Exec specifies the action to take.
                      properties:
                        command:
                          description: Command is the command line to execute inside
                            the container, the working directory for the command  is
                            root ('/') in the container's filesystem. The command
                            is simply exec'd, it is not run inside a shell, so traditional
                            shell instructions ('|', etc) won't work. To use a shell,
                            you need to explicitly call out to that shell. Exit status
                            of 0 is treated as live/healthy and non-zero is unhealthy.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      format: int32
                      type: integer
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP. You probably want to set "Host" in httpHeaders instead.
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP
                            allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be
                              used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults
                            to HTTP.
                          type: string
                      required:
                      - port
                      type: object
                    initialDelaySeconds:
                      description: 'Number of seconds after the container has started
                        before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness and startup. Minimum value is 1.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: 'TCPSocket specifies an action involving a TCP
                        port. TCP hooks not yet supported TODO: implement a realistic
                        TCP lifecycle hook'
                      properties:
                        host:
                          description: 'Optional: Host name to connect to, defaults
                            to the pod IP.'
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times
                        out. Defaults to 1 second. Minimum value is 1. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                  type: object
                replicas:
                  format: int32
                  type: integer
                resources:
                  description: ResourceRequirements describes the compute resource
                    requirements.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
              type: object
          type: object
        status:
          description: QuayEcosystemStatus defines the observed state of QuayEcosystem
          properties:
            conditions:
              items:
                description: QuayEcosystemCondition defines a list of conditions that
                  the object will transiton through
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  lastUpdateTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    description: QuayEcosystemConditionType defines the types of conditions
                      the operator will run through
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            hostname:
              type: string
            message:
              type: string
            phase:
              description: QuayEcosystemPhase defines the phase of lifecycle the operator
                is running in
              type: string
            setupComplete:
              type: boolean
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
