---

- name: "Run postjobs for Quay installation"
  hosts: localhost
  gather_facts: yes
  become: false
  tasks:

#    - name: "Get Quay and cookie /"
#      uri:
#        url: "{{ QUAY_ENDPOINT }}/"
#        method: GET
#        validate_certs: no #delete when certs are trusted
#        headers:
#          Content-Type: application/json
#      register: login
#
#    - name: debug to view login output
#      debug: var=login
#
#    - name: "Get Quay and cookie"
#      uri:
#        url: "{{ QUAY_ENDPOINT }}/api/v1/user"
#        method: GET
#        validate_certs: no #delete when certs are trusted
#        headers:
#          Cookie: 'session={{ login.cookies.session }}'
#          Content-Type: application/json
#      register: login
#      ignore_errors: yes
#
#    - name: debug to view login output
#      debug: var=login
#
#    - name: "Login"
#      uri:
#        url: "{{ QUAY_ENDPOINT }}/api/v1/signin"
#        method: POST
#        validate_certs: no #delete when certs are trusted
#        body_format: json
#        headers:
#          X-CSRF-TOKEN: '{{ login.cookies.csrftoken }}'
#          Cookie: 'session={{ login.cookies.session }}'
#          Content-Type: application/json
#        body:
#          username: "cloudlet_admin"
#          password: "Password@123"
#
#    - name: "Create cloudlet Organization"
#      uri:
#        url: "{{ QUAY_ENDPOINT }}/api/v1/organization/"
#        method: POST
#        headers:
#          Authorization: "Bearer {{ QUAY_AUTH_TOKEN }}"
#        validate_certs: no #delete when certs are trusted
#        body_format: json
#        status_code: 201
#        body:
#          name: "{{ organization }}"
#
#    - name: "Create mgmt (managment) OAuth Application under cloudlet org"
#      uri:
#          url: "{{ QUAY_ENDPOINT }}/api/v1/organization/{{ organization }}/applications"
#          method: POST
#          headers:
#            Authorization: "Bearer {{ QUAY_AUTH_TOKEN }}"
#          validate_certs: no #delete when certs are trusted
#          body_format: json
#          status_code: 201
#          body:
#            name: "mgmt"

    - name: "Update Quay Configuration"
      shell: oc login https://api.ocp43-prod.sales.lab.tlv.redhat.com:6443 -uadmin -predhat -n quay-enterprise --insecure-skip-tls-verify=true
 
    - name: "Create temporary directory"
      tempfile:
        state: directory
      register: tempdir
 
    - name: "Get current Configuration"
      shell: "oc extract secret/quay-enterprise-config-secret --to={{ tempdir.path }} --keys=config.yaml"

    - name: "Modify Configuration"
      include_vars:
        file: "{{ tempdir.path }}/config.yaml"
        name: default_config
      
    - template:
        src: config.yaml.j2
        dest: "{{ tempdir.path }}/config.yaml"
  
    - name: "Apply new Configuration"
      shell: "oc create secret generic quayconfigfile --from-file={{ tempdir.path }}/config.yaml"
  
    - name: "Remove temporary directory"
      file:
        path: "{{ tempfile.path }}"
        state: absent
      when: tempfile.path is defined

#    - name: "Add new configuration file to the CR"  
      

#    - name: "White list mgmt client-id in Quay's configuration"
       
#    - name: "Rollout Quay deployment"
#      shell: oc rollout restart deployment quayecosystem-quay
  
#    - name: "Generate OAuth Token with admin scopre"
  
#    - name: "Uploud Token to OCP as a secret in Quay's Project"
  
#    - name: "Create cloudlet+mirror robot for mirroing of all applications"
